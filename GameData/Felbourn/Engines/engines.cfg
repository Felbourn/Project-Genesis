
//=== Plumes ===
// Alcolox-Lower-A6
// Ammonialox
// Hydrogen-NTR
// Hydrolox-Lower
// Hydrolox-Upper
// Hydynelox-A7
// Hypergolic-Apollo-SM
// Hypergolic-Lower
// Hypergolic-Upper
// Hypergolic-OMS-Red
// Hypergolic-OMS-White
// Hypergolic-Vernier
// Ion-Argon-Gridded
// Ion-Krypton-Gridded
// Ion-Krypton-Hall
// Ion-Xenon-Gridded
// Ion-Xenon-Hall
// Kerolox-Lower
// Kerolox-Lower-F1
// Kerolox-Upper
// Kerolox-Vernier
// Solid-Lower
// Solid-Upper
// Solid-Sepmotor
// Solid-Vacuum
// Turbofan
// Turbojet

@PART[*]:HAS[@MODULE[ModuleEngineConfigs]]:AFTER[zEndPhase1]
{
    %ACTIONS
    {
        action = remove ModuleEngineConfigs
    }
	!MODULE[ModuleEngineConfigs],* {}
}

@PART[*]:HAS[@VARS/engine_thrust[*]]:AFTER[zEndPhase2]
{
    %ACTIONS
    {
        action = set new engine thrust
    }
    @MODULE[ModuleEngines*]
    {
        @name = ModuleEnginesFX
        @maxThrust = #$/VARS/engine_thrust$
        %isp_sl = #$/isp_v$
    }   
}

@PART[*]:HAS[@PLUME[*Lower*]&!PLUME[Solid*]]:AFTER[zEndPhase2]
{
    %ACTIONS
    {
        action = set lower stage isp SL
    }
    @MODULE[ModuleEngines*]
    {
        @isp_sl *= #$@MM_VARS/LowerIspSL$
    }
}

@PART[*]:HAS[@PLUME[Hypergolic*]]:AFTER[zEndPhase2]
{
    %ACTIONS
    {
        action = set hypergolic isp SL
    }
    @MODULE[ModuleEngines*]
    {
        @isp_sl *= #$@MM_VARS/HypergolicIspSL$
    }
}

@PART[*]:HAS[@PLUME[*Upper]]:AFTER[zEndPhase2]
{
    %ACTIONS
    {
        action = set upper stage isp SL
    }
    @MODULE[ModuleEngines*]
    {
        @isp_sl *= #$@MM_VARS/UpperIspSL$
    }    
}

@PART[*]:HAS[@PLUME[*NTR]]:AFTER[zEndPhase2]
{
    %ACTIONS
    {
        action = set NTR isp SL
    }
    @MODULE[ModuleEngines*]
    {
        @isp_sl *= #$@MM_VARS/NTRIspSL$
    }    
}

@PART[*]:HAS[@PLUME[Hydrolox*]]:AFTER[zEndPhase2]
{
    %ACTIONS
    {
        action = set Hydrolox stats
    }
    @MODULE[ModuleEngines*]
    {
        @PROPELLANT[LiquidFuel]
        {
            @name = LqdHydrogen
            @ratio = 1
            @ratio /= #$@RESOURCE_DEFINITION[LqdHydrogen]/density$
        }
        @PROPELLANT[Oxidizer]
        {
            @name = LqdOxygen
            @ratio = #$@MM_VARS/LqdOxygen2LqdHydrogen$
            @ratio /= #$@RESOURCE_DEFINITION[LqdOxygen]/density$
        }
    }
}

@PART[*]:HAS[@PLUME[Kerolox*]]:AFTER[zEndPhase2]
{
    %ACTIONS
    {
        action = set Kerolox fuels
    }
    @MODULE[ModuleEngines*]
    {
        @PROPELLANT[LiquidFuel]
        {
            @name = Kerosene
            @ratio = 1
            @ratio /= #$@RESOURCE_DEFINITION[Kerosene]/density$
        }
        @PROPELLANT[Oxidizer]
        {
            @name = LqdOxygen
            @ratio = #$@MM_VARS/LqdOxygen2Kerosene$
            @ratio /= #$@RESOURCE_DEFINITION[LqdOxygen]/density$
        }
    }
}

@PART[*]:HAS[@PLUME[Hypergolic*]]:AFTER[zEndPhase2]
{
    %ACTIONS
    {
        action = set Hypergolic stats
    }
    @MODULE[ModuleEngines*]
    {
        @PROPELLANT[LiquidFuel]
        {
            @name = UDMH
            @ratio = 1
            @ratio /= #$@RESOURCE_DEFINITION[UDMH]/density$
        }
        @PROPELLANT[Oxidizer]
        {
            @name = NTO
            @ratio = #$@MM_VARS/NTO2UDMH$
            @ratio /= #$@RESOURCE_DEFINITION[NTO]/density$
        }
    }    
}

@PART[*]:HAS[@PLUME[*]&~solid_fuel_engine[]]:AFTER[zEndPhase2]
{
    %ACTIONS
    {
        action = set isp curve
    }
    @MODULE[ModuleEngines*]
    {
        @atmosphereCurve
        {           
            @key,0 = #0 $/isp_v$
            @key,1 = #1 $../isp_sl$
        }
    }
}

@PART[*]:HAS[@MODULE[ModuleEnginesFX]&@PLUME[*]]:Final
{
    %ACTIONS
    {
        action = set FX plume effect name
    }
 	@MODULE[ModuleEnginesFX]
    {
        %powerEffectName = #$/PLUME/name$
    }
}

@PART[*]:HAS[@MODULE[ModuleEngineConfigs]]:Final
{
    %ACTIONS
    {
        action = set RF plume effect name
    }
    @MODULE[ModuleEngineConfigs]
    {
        @CONFIG,*
        {
	        %powerEffectName = #$/PLUME/name$
        }
    }    
}
