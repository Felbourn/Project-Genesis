
@PART[*]:HAS[#mass[*]]:Final
{
	%SAVED_VALUES
	{
		mass = #$/mass$
	}
}
@PART[*]:HAS[#mass[*]]:Final
{
	%ACTIONS
	{
		action = clear mass
	}
	@mass = 0 // init to 0, then add masses by traits
}

@PART[*]:HAS[@MODULE[ModuleFuelTanks]&~MFT_type[Solid]]:Final
{
	%ACTIONS
	{
		action = add mass from ModuleFuelTanks
	}
	change = #$/MODULE[ModuleFuelTanks]/volume$
	@change *= #$@MM_VARS/FuelMassPerLiter$
	@change /= #$@MM_VARS/KgPerTon$
	@mass += #$change$
	!change = DELETE
	@title ^= : FIX_MASS::
}

@PART[*]:HAS[#massTypeEngine[1]]:Final
{
	%ACTIONS
	{
		action = add mass from maxThrust
	}
	change = #$/MODULE[ModuleEnginesFX]/maxThrust$
	@change /= #$TWR_type$
	@change /= #$@MM_VARS/Gravity$
	@mass += #$change$
	!change = DELETE
	@title ^= : FIX_MASS::
}

@PART[*]:HAS[#MFT_type[Solid]]:Final
{
	%ACTIONS
	{
		action = add mass from solid fuel volume
	}
	change = #$/@MODULE[ModuleFuelTanks]/volume$
	@change *= #$@MM_VARS/SolidMassPerLiter$
	@change /= #$@MM_VARS/KgPerTon$
	@change += #$change$
	@mass += #$change$
	!change = DELETE
	@title ^= : FIX_MASS::
}

@PART[*]:HAS[#massTypeRCS[1]]:Final
{
	%ACTIONS
	{
		action = add mass from RCS
	}
	change = #$/MODULE[ModuleRCSFX]/maxThrust$
	@change /= #$@MM_VARS/RCS_TWR$
	@change /= #$@MM_VARS/Gravity$
	@change *= #$@RCS_directions$
	@mass += #$change$
	!change = DELETE
	@title ^= : FIX_MASS::
}

@PART[*]:HAS[#massTypeBoxVolume[1]]:Final
{
	// V = w * h * d

	%ACTIONS
	{
		action = add mass from box volume
	}
	change = #$Box_wid$
	@change *= #$Box_hgt$
	@change *= #$Box_dep$
	@change *= #$Box_density$
	@mass += #$change$

	!change = DELETE
	!massTypeBoxVolume = DELETE
	@title ^= : FIX_MASS::
}

@PART[*]:HAS[#massTypeSphereVolume[1]]:Final
{
	// V = 4/3 pi r^3

	%ACTIONS
	{
		action = add mass from sphere volume
	}
	change = #$sphere_dia$
	@change *= #$@MM_VARS/DiamToRadius$
	@change != #$@MM_VARS/Cubed$
	@change *= #$@MM_VARS/PI$
	@change *= #$@MM_VARS/SphereRatio$
	@mass += #$change$

	!change = DELETE
	!massTypeBoxVolume = DELETE
	@title ^= : FIX_MASS::
}

@PART[*]:HAS[#massTypeBattery[1]]:Final
{
	%ACTIONS
	{
		action = add mass from battery charge
	}
	change = #$battery_dia$
	@change *= #$@MM_VARS/DiamToRadius$
	@change != #$@MM_VARS/Squared$
	@change *= #$@MM_VARS/PI$
	@change *= #$battery_hgt$
	@change *= #$@MM_VARS/BatteryMass$
	@change *= #$@MM_VARS/KSPBattery$

	@mass += #$change$

	!change = DELETE
	!massTypeBattery = DELETE
	@title ^= : FIX_MASS::
}
@PART[*]:HAS[#commandWatts[*]]:Final // extra mass from CPU & backup battery
{
	%ACTIONS
	{
		action = add mass from CPU battery
	}
	@mass += #$@MM_VARS/CPUMass$

	change = #$commandWatts$
	@change *= #$@MM_VARS/TonsPerWatt$
	@mass += #$change$
	!change = DELETE
}

@PART[*]:HAS[#massTypeCMG[1]]:Final
{
	%ACTIONS
	{
		action = add mass from CMG torque
	}
	change = #$torque_dia$
	@change *= #$@MM_VARS/DiamToRadius$
	@change != #$@MM_VARS/Squared$
	@change *= #$@MM_VARS/PI$
	@change *= #$torque_hgt$
	@change *= #$@MM_VARS/TorqueMass$

	@mass += #$change$

	!change = DELETE
	!massTypeCMG = DELETE
	@title ^= : FIX_MASS::
}

@PART[*]:HAS[#massTypeSolar[1]&#solar_len[*]]:Final
{
	%ACTIONS
	{
		action = add mass from solar array rect
	}
	change = #$solar_len$
	@change *= #$solar_wid$
	@change *= #$solar_parts$
	@change *= #$solar_style$
	@change *= #$@MM_VARS/SolarMass$
	@mass += #$change$
}
@PART[*]:HAS[#massTypeSolar[1]&#solar_dia[*]]:Final
{
	%ACTIONS
	{
		action = add mass from solar array round
	}
	change = #$solar_dia$
	@change *= #$@MM_VARS/PI$
	@change *= #$solar_hgt$
	@change *= #$solar_parts$
	@change *= #$solar_style$
	@change /= #$solar_arcs$
	@change *= #$@MM_VARS/SolarMass$
	@mass += #$change$
}
@PART[*]:HAS[#massTypeSolar[1]]:Final
{
	!change = DELETE
	!massTypeSolar = DELETE
	@title ^= : FIX_MASS::
}

@PART[*]:HAS[#massTypeCanArea[1]&~Can_arcs[]]:Final
{
	Can_arcs = 1
}
@PART[*]:HAS[#massTypeCanArea[1]&~Can_ends[]]:Final
{
	Can_ends = 0
}
@PART[*]:HAS[#massTypeCanArea[1]]:Final
{
	%ACTIONS
	{
		action = set mass from cylinder surface area
	}
	// top & bottom A = pi * r^2

	change = #$Can_dia$
	@change *= #$@MM_VARS/DiamToRadius$
	@change != #$@MM_VARS/Squared$
	@change *= #$@MM_VARS/PI$
	@change *= #$Can_dep$
	@change *= #$Can_density$
	@change *= #$Can_ends$

	// lateral A = pi * d * h

	lateral = #$Can_dia$
	@lateral *= #$@MM_VARS/PI$
	@lateral *= #$Can_hgt$
	@lateral *= #$Can_dep$
	@lateral *= #$Can_density$

	@change += #$lateral$
	@change /= #$Can_arcs$
	@mass += #$change$

	!change = DELETE
	!lateral = DELETE
	!massTypeCanArea = DELETE
	@title ^= : FIX_MASS::
}

@PART[*]:HAS[#massTypeCanVolume[1]]:Final
{
	%ACTIONS
	{
		action = add mass from cylinder volume
	}
	// V = pi * r^2 * h

	change = #$Can_dia$
	@change *= #$@MM_VARS/DiamToRadius$
	@change != #$@MM_VARS/Squared$
	@change *= #$@MM_VARS/PI$
	@change *= #$Can_hgt$
	@change *= #$Can_density$
	@mass += #$change$

	!change = DELETE
	!massTypeCanVolume = DELETE
	@title ^= : FIX_MASS::
}

@PART[*]:HAS[#massTypeTruncConeVolume[1]]:Final
{
	%ACTIONS
	{
		action = add mass from truncated cone volume
	}
	// V = pi * h * (r^2 + Rr + R^2)/3

	topRadius = #$TruncCone_diaTop$
	@topRadius *= #$@MM_VARS/DiamToRadius$
	topRadius2 = #$topRadius$
	@topRadius2 != #$@MM_VARS/Squared$

	botRadius = #$TruncCone_diaBot$
	@botRadius *= #$@MM_VARS/DiamToRadius$
	botRadius2 = #$botRadius$
	@botRadius2 != #$@MM_VARS/Squared$

	change = #$topRadius$
	@change *= #$botRadius$
	@change += #$topRadius2$
	@change += #$botRadius2$
	@change /= 3
	@change *= #$@MM_VARS/PI$
	@change *= #$TruncCone_hgt$
	@change *= #$TruncCone_density$

	@mass += #$change$

	!change = DELETE
	!topRadius = DELETE
	!topRadius2 = DELETE
	!botRadius = DELETE
	!botRadius2 = DELETE
	!massTypeTruncConeVolume = DELETE
	@title ^= : FIX_MASS::
}

//-------------------------------------------------------------------------------------------------
// SQRT(x) calculator
//-------------------------------------------------------------------------------------------------

//-- things that need a SQRT ----------------------------------------------------------------------

@PART[*]:HAS[#massTypeConeArea[1]]:Final
{
	%ACTIONS
	{
		action = add mass from cone area
	}
	// lateral A = pi r sqrt(h^2 + r^2)

	radius = #$Cone_dia$
	@radius *= #$@MM_VARS/DiamToRadius$
	radius2 = #$radius$
	@radius2 != #$@MM_VARS/Squared$

	sqrt_of = #$Cone_hgt$
	@sqrt_of != #$@MM_VARS/Squared$
	@sqrt_of += #$radius2$
}

@PART[*]:HAS[#massTypeTruncConeArea[1]]:Final
{
	%ACTIONS
	{
		action = add mass from tuncated cone surface area
	}
	// lateral A = pi * (r1 + r2) * sqrt( (r1 - r2)^2 + h^2 )

	hgt_sq = #$TruncCone_hgt$
	@hgt_sq != #$@MM_VARS/Squared$

	r1 = #$TruncCone_diaTop$
	@r1 *= #$@MM_VARS/DiamToRadius$

	r2 = #$TruncCone_diaBot$
	@r2 *= #$@MM_VARS/DiamToRadius$

	sqrt_of = #$r1$
	@sqrt_of -= #$r2$
	@sqrt_of != #$@MM_VARS/Squared$

	@sqrt_of += #$hgt_sq$
}

@PART[*]:HAS[#massTypeFairingCone[1]]:Final
{
	%ACTIONS
	{
		action = add mass from fairing cone volume
	}
	// lateral A = pi * r * sqrt(h^2 + r^2)

	radius = #$FairingCone_dia$
	@radius *= #$@MM_VARS/DiamToRadius$
	
	radius2 = #$radius$
	@radius2 != #$@MM_VARS/Squared$

	sqrt_of = #$FairingCone_hgt$
	@sqrt_of != #$@MM_VARS/Squared$
	@sqrt_of += #$radius2$
}

//-- calculator -----------------------------------------------------------------------------------

@PART[*]:HAS[#sqrt_of[*]]:Final
{
	// iterate a few times to refine the sqrt guess
	// f(x) = x^2 - top
	// f'(x) = 2x
	// x' = x - f(x) / f'(x)

	x_value = #$sqrt_of$
	@x_value /= 13

	// iteration 1
	sqrt_fx = #$x_value$
	@sqrt_fx != #$@MM_VARS/Squared$
	@sqrt_fx -= #$sqrt_of$
	@sqrt_fx /= #$x_value$
	@sqrt_fx *= -0.5
	@x_value += #$sqrt_fx$

	// iteration 2
	sqrt_fx = #$x_value$
	@sqrt_fx != #$@MM_VARS/Squared$
	@sqrt_fx -= #$sqrt_of$
	@sqrt_fx /= #$x_value$
	@sqrt_fx *= -0.5
	@x_value += #$sqrt_fx$

	// iteration 3
	sqrt_fx = #$x_value$
	@sqrt_fx != #$@MM_VARS/Squared$
	@sqrt_fx -= #$sqrt_of$
	@sqrt_fx /= #$x_value$
	@sqrt_fx *= -0.5
	@x_value += #$sqrt_fx$

	// iteration 4
	sqrt_fx = #$x_value$
	@sqrt_fx != #$@MM_VARS/Squared$
	@sqrt_fx -= #$sqrt_of$
	@sqrt_fx /= #$x_value$
	@sqrt_fx *= -0.5
	@x_value += #$sqrt_fx$

	// iteration 5
	sqrt_fx = #$x_value$
	@sqrt_fx != #$@MM_VARS/Squared$
	@sqrt_fx -= #$sqrt_of$
	@sqrt_fx /= #$x_value$
	@sqrt_fx *= -0.5
	@x_value += #$sqrt_fx$

	// iteration 6
	sqrt_fx = #$x_value$
	@sqrt_fx != #$@MM_VARS/Squared$
	@sqrt_fx -= #$sqrt_of$
	@sqrt_fx /= #$x_value$
	@sqrt_fx *= -0.5
	@x_value += #$sqrt_fx$

	// final
	sqrt_is = #$x_value$

	!sqrt_of = DELETE
	!x_value = DELETE
	!sqrt_fx = DELETE
}

//-- use SQRT results -----------------------------------------------------------------------------

@PART[*]:HAS[#massTypeTruncConeArea[1]]:Final
{
	// lateral A = pi * (r1 + r2) * sqrt( (r1 - r2)^2 + h^2 )
	// top & bottom A = pi * r1^2 + pi * r2^2

	change = #$r1$
	@change += #$r2$
	@change *= #$sqrt_is$
	@change *= #$@MM_VARS/PI$
	@change *= #$TruncCone_dep$
	@change *= #$TruncCone_density$
	@mass += #$change$

	!change = DELETE
	!r1 = DELETE
	!r2 = DELETE
	!massTypeTruncConeArea = DELETE
	@title ^= : FIX_MASS::
}

@PART[*]:HAS[#massTypeFairingCone[1]]:Final
{
	// half cone = pi * r * sqrt(h^2 + r^2)
	// half can = 2 * pi * r * h
	// so A = pi * r * (sqrt / 2 + h)

	@title ^= : FIX_MASS::

	change = #$sqrt_is$
	@change /= 2
	@change += #$FairingCone_hgt$
	@change *= #$@MM_VARS/PI$
	@change *= #$radius$
	@change *= #$FairingCone_dep$
	@change /= #$FairingCone_arcs$
	@change *= #$@MM_VARS/FairingMass$
	@mass += #$change$

	!change = DELETE
	!radius = DELETE
	!radius2 = DELETE
	!massTypeFairingCone = DELETE
	@title ^= : FIX_MASS::
}

@PART[*]:HAS[#massTypeConeArea[1]]:Final
{
	// lateral A = pi r sqrt(h^2 + r^2)

	@title ^= : FIX_MASS::

	change = #$sqrt_is$
	@change *= #$@MM_VARS/PI$
	@change *= #$radius$
	@change *= #$Cone_dep$
	@change *= #$Cone_density$
	@change /= #$Cone_arcs$

	@mass += #$change$

	!change = DELETE
	!radius = DELETE
	!radius2 = DELETE
	!massTypeConeArea = DELETE
}

//-------------------------------------------------------------------------------------------------

// massType is probably wrong
@PART[*]:HAS[#mass[0]]:Final
{
	@mass = 9999
}
