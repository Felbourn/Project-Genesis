//-------------------------------------------------------------------------------------------------
PART[*]:HAS[@VARS:HAS[#comm_range[*]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = clear old antenna
	}
	!MODULE[ModuleDataTransmitter],* {}
	!MODULE[ModuleSPUPassive],* {}
	!MODULE[ModuleRTAntenna],* {}
	!MODULE[TweakScale] {}
}

//-------------------------------------------------------------------------------------------------
@PART[*]:HAS[@VARS:HAS[#comm_range[comm_near1]]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = #define $/VARS/comm_range$
	}
	@VARS
	{
		@comm_range = #$@MM_VARS/comm_near1[0]$
		comm_angle = #$@MM_VARS/comm_near1[1]$
		comm_watts = #$@MM_VARS/comm_near1[2]$
		comm_mass1 = #$@MM_VARS/comm_near1[3]$
		comm_mass2 = #$@MM_VARS/comm_near1[4]$
		comm_mass3 = #$@MM_VARS/comm_near1[5]$
		comm_mass4 = #$@MM_VARS/comm_near1[6]$
	}
}
@PART[*]:HAS[@VARS:HAS[#comm_range[comm_near2]]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = #define $/VARS/comm_range$
	}
	@VARS
	{
		@comm_range = #$@MM_VARS/comm_near2[0]$
		comm_angle = #$@MM_VARS/comm_near2[1]$
		comm_watts = #$@MM_VARS/comm_near2[2]$
		comm_mass1 = #$@MM_VARS/comm_near2[3]$
		comm_mass2 = #$@MM_VARS/comm_near2[4]$
		comm_mass3 = #$@MM_VARS/comm_near2[5]$
		comm_mass4 = #$@MM_VARS/comm_near2[6]$
	}
}
@PART[*]:HAS[@VARS:HAS[#comm_range[comm_near3]]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = #define $/VARS/comm_range$
	}
	@VARS
	{
		@comm_range = #$@MM_VARS/comm_near3[0]$
		comm_angle = #$@MM_VARS/comm_near3[1]$
		comm_watts = #$@MM_VARS/comm_near3[2]$
		comm_mass1 = #$@MM_VARS/comm_near3[3]$
		comm_mass2 = #$@MM_VARS/comm_near3[4]$
		comm_mass3 = #$@MM_VARS/comm_near3[5]$
		comm_mass4 = #$@MM_VARS/comm_near3[6]$
	}
}
@PART[*]:HAS[@VARS:HAS[#comm_range[comm_near4]]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = #define $/VARS/comm_range$
	}
	@VARS
	{
		@comm_range = #$@MM_VARS/comm_near4[0]$
		comm_angle = #$@MM_VARS/comm_near4[1]$
		comm_watts = #$@MM_VARS/comm_near4[2]$
		comm_mass1 = #$@MM_VARS/comm_near4[3]$
		comm_mass2 = #$@MM_VARS/comm_near4[4]$
		comm_mass3 = #$@MM_VARS/comm_near4[5]$
		comm_mass4 = #$@MM_VARS/comm_near4[6]$
	}
}
@PART[*]:HAS[@VARS:HAS[#comm_range[comm_near5]]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = #define $/VARS/comm_range$
	}
	@VARS
	{
		@comm_range = #$@MM_VARS/comm_near5[0]$
		comm_angle = #$@MM_VARS/comm_near5[1]$
		comm_watts = #$@MM_VARS/comm_near5[2]$
		comm_mass1 = #$@MM_VARS/comm_near5[3]$
		comm_mass2 = #$@MM_VARS/comm_near5[4]$
		comm_mass3 = #$@MM_VARS/comm_near5[5]$
		comm_mass4 = #$@MM_VARS/comm_near5[6]$
	}
}
@PART[*]:HAS[@VARS:HAS[#comm_range[comm_near6]]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = #define $/VARS/comm_range$
	}
	@VARS
	{
		@comm_range = #$@MM_VARS/comm_near6[0]$
		comm_angle = #$@MM_VARS/comm_near6[1]$
		comm_watts = #$@MM_VARS/comm_near6[2]$
		comm_mass1 = #$@MM_VARS/comm_near6[3]$
		comm_mass2 = #$@MM_VARS/comm_near6[4]$
		comm_mass3 = #$@MM_VARS/comm_near6[5]$
		comm_mass4 = #$@MM_VARS/comm_near6[6]$
	}
}
@PART[*]:HAS[@VARS:HAS[#comm_range[comm_near7]]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = #define $/VARS/comm_range$
	}
	@VARS
	{
		@comm_range = #$@MM_VARS/comm_near7[0]$
		comm_angle = #$@MM_VARS/comm_near7[1]$
		comm_watts = #$@MM_VARS/comm_near7[2]$
		comm_mass1 = #$@MM_VARS/comm_near7[3]$
		comm_mass2 = #$@MM_VARS/comm_near7[4]$
		comm_mass3 = #$@MM_VARS/comm_near7[5]$
		comm_mass4 = #$@MM_VARS/comm_near7[6]$
	}
}
@PART[*]:HAS[@VARS:HAS[#comm_range[comm_far1]]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = #define $/VARS/comm_range$
	}
	@VARS
	{
		@comm_range = #$@MM_VARS/comm_far1[0]$
		comm_angle = #$@MM_VARS/comm_far1[1]$
		comm_watts = #$@MM_VARS/comm_far1[2]$
		comm_mass1 = #$@MM_VARS/comm_far1[3]$
		comm_mass2 = #$@MM_VARS/comm_far1[4]$
		comm_mass3 = #$@MM_VARS/comm_far1[5]$
		comm_mass4 = #$@MM_VARS/comm_far1[6]$
	}
}
@PART[*]:HAS[@VARS:HAS[#comm_range[comm_far2]]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = #define $/VARS/comm_range$
	}
	@VARS
	{
		@comm_range = #$@MM_VARS/comm_far2[0]$
		comm_angle = #$@MM_VARS/comm_far2[1]$
		comm_watts = #$@MM_VARS/comm_far2[2]$
		comm_mass1 = #$@MM_VARS/comm_far2[3]$
		comm_mass2 = #$@MM_VARS/comm_far2[4]$
		comm_mass3 = #$@MM_VARS/comm_far2[5]$
		comm_mass4 = #$@MM_VARS/comm_far2[6]$
	}
}
@PART[*]:HAS[@VARS:HAS[#comm_range[comm_far3]]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = #define $/VARS/comm_range$
	}
	@VARS
	{
		@comm_range = #$@MM_VARS/comm_far3[0]$
		comm_angle = #$@MM_VARS/comm_far3[1]$
		comm_watts = #$@MM_VARS/comm_far3[2]$
		comm_mass1 = #$@MM_VARS/comm_far3[3]$
		comm_mass2 = #$@MM_VARS/comm_far3[4]$
		comm_mass3 = #$@MM_VARS/comm_far3[5]$
		comm_mass4 = #$@MM_VARS/comm_far3[6]$
	}
}
@PART[*]:HAS[@VARS:HAS[#comm_range[comm_far4]]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = #define $/VARS/comm_range$
	}
	@VARS
	{
		@comm_range = #$@MM_VARS/comm_far4[0]$
		comm_angle = #$@MM_VARS/comm_far4[1]$
		comm_watts = #$@MM_VARS/comm_far4[2]$
		comm_mass1 = #$@MM_VARS/comm_far4[3]$
		comm_mass2 = #$@MM_VARS/comm_far4[4]$
		comm_mass3 = #$@MM_VARS/comm_far4[5]$
		comm_mass4 = #$@MM_VARS/comm_far4[6]$
	}
}

//-------------------------------------------------------------------------------------------------
// BRAINS

@PART[*]:HAS[@VARS:HAS[#comm_type[*]]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = add an antenna
	}
	%MODULE[ModuleRTAntenna] {}
	%MODULE[ModuleSPUPassive] {}
}

//-------------------------------------------------------------------------------------------------
// ANGLE

@PART[*]:HAS[@VARS:HAS[#comm_type[*Dish]]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = set dish angle
	}
	@VARS:HAS[#comm_type[fixedDish]]
	{
		@comm_angle *= #$@MM_VARS/comm_fixed_angle$
	}
	@MODULE[ModuleRTAntenna]
	{
		%DishAngle = #$/VARS/comm_angle$
	}
}

//-------------------------------------------------------------------------------------------------
// RANGE

@PART[*]:HAS[@VARS:HAS[#comm_type[*Omni]]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = set antenna to omni stats
	}
	@MODULE[ModuleRTAntenna]
	{
		%Mode0OmniRange = 0
		%Mode1OmniRange = #$/VARS/comm_range$
	}
}

@PART[*]:HAS[@VARS:HAS[#comm_type[*Dish]]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = add ModuleRTAntenna for dish
	}
	@MODULE[ModuleRTAntenna]
	{
		%Mode0DishRange = 0
		%Mode1DishRange = #$/VARS/comm_range$
	}
}

//-------------------------------------------------------------------------------------------------
// POWER

@PART[*]:HAS[@VARS:HAS[#comm_type[*]]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = calculate antenna Watts
	}
	@VARS:HAS[#comm_type[*Omni]] // omni take more power than a dish
	{
		@comm_watts *= #$@MM_VARS/comm_omni_power$
	}
	@VARS:HAS[#comm_type[fixedDish]] // fixed take less power than animated
	{
		@comm_watts *= #$@MM_VARS/comm_fixed_power$
	}
	@MODULE[ModuleRTAntenna]
	{
		%EnergyCost = #$/VARS/comm_watts$
		@EnergyCost /= #$@MM_VARS/SecondsPerHour$
		%TRANSMITTER
		{
			%PacketInterval = 0.3
			%PacketSize = 2
			%PacketResourceCost = #$/VARS/comm_watts$
		}
	}
}

//-------------------------------------------------------------------------------------------------
// MASS

@PART[*]:HAS[@VARS:HAS[#comm_type[*]]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = #define mass for $/VARS/comm_type$ comm
	}
	@VARS:HAS[#comm_type[fixedOmni]]
	{
		comm_mass = #$/VARS/comm_mass1$
	}
	@VARS:HAS[#comm_type[animOmni]]
	{
		comm_mass = #$/VARS/comm_mass2$
	}
	@VARS:HAS[#comm_type[fixedDish]]
	{
		comm_mass = #$/VARS/comm_mass3$
	}
	@VARS:HAS[#comm_type[animDish]]
	{
		comm_mass = #$/VARS/comm_mass4$
	}
}

//-------------------------------------------------------------------------------------------------
// ANIMS

@PART[*]:HAS[@VARS:HAS[#comm_type[anim*]]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = point at comm anim module
	}
	@VARS:HAS[~comm_anim[]]
	{
		comm_anim = 1
	}
	@MODULE[ModuleRTAntenna]
	{
		%MaxQ = 6000
		%DeployFxModules = #$/VARS/comm_anim$
	}
	@MODULE[ModuleAnimateGeneric],*
	{
		%allowManualControl = false
	}
}

@PART[*]:HAS[@VARS:HAS[#comm_type[fixed*]]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = antenna is on by default when it has no anim
	}
	@MODULE[ModuleRTAntenna]
	{
		%IsRTActive = true
	}
}

@PART[*]:HAS[@VARS:HAS[#comm_blink[*]]]:AFTER[zPhase1Init]
{
	%ACTIONS
	{
		action = set comm blink anim
	}
	@MODULE[ModuleRTAntenna]
	{
		%ProgressFxModules = #$/VARS/comm_blink$
	}
}
