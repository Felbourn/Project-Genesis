PART
{
	name = MKS_DockingPort
	module = Part
	author = RoverDude
	rescaleFactor = 1
	node_stack_bottom = 0.0, 0.25, 0.0, 0.0, 1.0, 0.0, 1
	node_stack_top = 0.0, -0.25, 0.0, 0.0, -1.0, 0.0, 1
	node_stack_dockingNode = 0.0, 0.25, 0.0, 0.0, 1.0, 0.0, 1
	node_attach = 0,-.2,0,0,-1,0

	MODEL
	{
		model = UmbraSpaceIndustries/Kolonization/Assets/DockingPort
	}
	TechRequired = advConstruction
	entryCost = 8000
	cost = 280
	category = none
	subcategory = -1
	title = UKS Kerbitrail(tm) Docking Port
	manufacturer = USI - Kolonization Division
	description = A Docking Port to connect MKS modules. 
	attachRules = 1,1,1,1,0
	mass = 0.05
	dragModelType = default
	maximum_drag = 0.25
	minimum_drag = 0.25
	angularDrag = .5
	crashTolerance = 45
	breakingForce = 280
	breakingTorque = 280
	maxTemp = 1700
	bulkheadProfiles = size1, srf


	MODULE
	{
        name = ModuleKISItem
        shortcutKeyAction = drop
        useName = use
        usableFromEva = true
        usableFromContainer = true
        usableFromPod = true
        usableFromEditor = true
        stackable = false
        volumeOverride = 800
        editorItemsCategory = false
        moveSndPath = KIS/Sounds/itemMove
        equipable = false
        equipMode = part
        equipSlot = Back Pocket
        equipSkill = 
        equipRemoveHelmet = false
        equipMeshName = helmet
        equipBoneName = helmet01
        equipPos = (0, 0, 0)
        equipDir = (0, 0, 0)
        carriable = true
        allowAttachOnStatic = false
	}

	MODULE
	{
		name = FSanimateGeneric
		animationName = Lights
		startEventGUIName = Lights On
		endEventGUIName = Lights Off
		availableInEVA = True
		availableInVessel = True
		EVArange = 5
		layer=3
		playAnimationOnEditorSpawn = False
	}

	MODULE
	{
		name = ModuleDockingNode
		nodeType = size1
		referenceAttachNode = dockingNode
		nodeTransformName = DOCKING
		undockEjectionForce = 0.25
		minDistanceToReEngage = 3.5
		acquireForce = 3.5
		acquireTorque = 3.5
		acquireRange = 3.0
		captureRange = 1.5	
	}

	MODULE
	{
		name = ModuleConnectedLivingSpace
		passable = true
		passableWhenSurfaceAttached = true 
	}
	
}
